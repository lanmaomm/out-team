'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _rsBreadcrumb = require('rs-breadcrumb');

var _rsBreadcrumb2 = _interopRequireDefault(_rsBreadcrumb);

var _reactRouter = require('react-router');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Header = function (_Component) {
  _inherits(Header, _Component);

  function Header() {
    _classCallCheck(this, Header);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Header).apply(this, arguments));
  }

  _createClass(Header, [{
    key: 'renderBread',
    value: function renderBread() {
      return _react2.default.createElement(
        _rsBreadcrumb2.default,
        null,
        this.props.dataList.map(function (item) {
          return _react2.default.createElement(
            _rsBreadcrumb.Crumb,
            { key: item.name },
            item.to ? _react2.default.createElement(
              _reactRouter.Link,
              { to: item.to },
              item.name
            ) : _react2.default.createElement(
              'span',
              null,
              item.name
            )
          );
        })
      );
    }
  }, {
    key: 'renderNav',
    value: function renderNav() {
      return _react2.default.createElement(
        'ul',
        { className: 'row' },
        this.props.navList.map(function (item) {
          return _react2.default.createElement(
            'div',
            { className: 'salt-col salt-col-8', key: item.name },
            item.to ? _react2.default.createElement(
              _reactRouter.Link,
              { to: item.to },
              item.name
            ) : _react2.default.createElement(
              'span',
              null,
              item.name
            )
          );
        })
      );
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.props.navList.length !== 0) {
        return this.renderNav();
      }

      return this.renderBread();
    }
  }]);

  return Header;
}(_react.Component);

Header.propTypes = {
  dataList: _react.PropTypes.array,
  navList: _react.PropTypes.array
};
Header.defaultProps = {
  dataList: [],
  navList: []
};
exports.default = Header;
module.exports = exports['default'];