'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _PageLayout2 = require('../core/PageLayout');

var _PageLayout3 = _interopRequireDefault(_PageLayout2);

var _Form = require('../tmp/Form');

var _Form2 = _interopRequireDefault(_Form);

var _WrapperTable = require('../components/WrapperTable');

var _WrapperTable2 = _interopRequireDefault(_WrapperTable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PageGrid = function (_PageLayout) {
  _inherits(PageGrid, _PageLayout);

  function PageGrid() {
    _classCallCheck(this, PageGrid);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(PageGrid).apply(this, arguments));
  }

  _createClass(PageGrid, [{
    key: 'initial',
    value: function initial() {
      this.state = {};
      this.searchUrl = '';
    }
  }, {
    key: 'renderTopBar',
    value: function renderTopBar() {
      return _react2.default.createElement(_Form2.default, null);
    }
  }, {
    key: 'renderMain',
    value: function renderMain() {
      return _react2.default.createElement(_WrapperTable2.default, null);
    }
  }]);

  return PageGrid;
}(_PageLayout3.default);

exports.default = PageGrid;
module.exports = exports['default'];